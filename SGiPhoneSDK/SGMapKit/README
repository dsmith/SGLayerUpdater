SGMapKit v0.4.1

================================================================================
ABSTRACT:

An extension of the MapKit that uses the SGClient.

================================================================================
USAGE:

1. Make sure SGMapKit-v*.*.* is built.
2. Add /path/to/SGMapKit-v*.*.*/Headers to the "Header Search Paths" setting.
3. Add /path/to/SGMapKit-v*.*.*/$(PLATFORM_NAME) to "Library Search Paths" setting.
3. Add the following frameworks: CoreLocation, Foundation, MapKit, SGClient
4. Goto your target's info and add "-all_load -ObjC -l SGClient" to the "Other Linker Flags" setting under the Build tag. This will
inform the linker to load the categories from the static library.

================================================================================
BUILD REQUIREMENTS:

iPhone SDK 3.0

Frameworks
- CoreLocation
- Foundation
- MapKit

================================================================================
PACKAGING LIST:

Documentation
All the HTML files generated by HeaderDoc.

	SGMapKit.html
	The table of contents for the entire documentation structure.

libSGMapKit.a
The static library built for the iPhone Device.
	
libSGMapKit-sim.a
The static library built for the iPhone Simulator.

Headers
	
    SGLayerMapView.h
    Defines a subclass of MKMapView that will retrieve SGRecordAnnotations
    when the map position is updated.

    SGRecordline.h
    An implementation of MKOverlay that creates MKMapPoints from a records
    history.
    
    SGPointHelper.h
    Converts lon/lat arrays into CLLocationCoordinate2D arrays
    and vice-versa.
    
    SGDynamicPolylineView.h
    A subclass of MKOverlayView that redraws SGRecordLines.
    	
	
================================================================================
CHANGES FROM PREVIOUS VERSIONS:
Versions 0.4.1
- Created an overlay view that will redraw itself properly

Versions 0.4.0
- Added the ability to draw a MKPolyline for a given SGRecord
- Made the SGLayerMapView compatable with iPhone OS 4.0

Version 0.3.5
- retrieveLayers now uses pagination

Version 0.3.4
- Fixed a bug with the MKMapViewDelegate method mapView:regionDidChangeAnimated:

Version 0.3.3
- The SGLayerMapView can now do nearby queries with a start/end
parameter

Version 0.3.2
- Added license

Version 0.3.1
- Restructured project.

Version 0.3.0
- Upgraded SGLocationService to use version 0.1 of the SimpleGeo API
- Models have been updated to reflect the new GeoJSON format returned
from SimpleGeo queries
- Added a new NSDictionary and NSArray category to help access key specific
to GeoJSON format
- Replaced updateRecordWithGeoJSONDictionary: with updateRecordWithGeoJSONObject:
- Removed userDefinedProperties from SGRecordAnnotation and replaced it with
properties
- Reworked the SGGeoJSONEncoder

Version 0.2.3
- Updated the default container images.
- Updated SGRadar to present target images that are on the border of
the radar. 
- Update SGLayerMapView to load more records based on a time interval.
- Added media as a filter type.

Version 0.2.1
- Allow filtering by types in nearby requests.

Version 0.2.0
- Added reverse geocoding.
- Implemented the new SimpleGeo endpoints that allow multiple records to be
added and retrieved.

Version 0.1.9
- SGLayer objects will now update records as they are recieved from the SGLocaitonService.
- SGRecord defines a new property that stores user defined properties.
- SGOAuth objects can be restored from a save point.
- Nearby searchs can be done using a Geohash or a lat/lon coordinate paired with a radius.

Version 0.1.8
- First version.

================================================================================
Copyright (C) 2010 SimpleGeo Inc. All rights reserved.
